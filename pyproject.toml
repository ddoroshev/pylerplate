[tool.poetry]
name = "pylerplate"
version = "0.3.0"
description = ""
authors = ["Dima Doroshev <dima@doroshev.com>"]

[tool.poetry.dependencies]
python = "^3.12"
sentry-sdk = "^1.28.1"
fastapi-utils = "^0.7.0"
fastapi = "^0.112.0"
ujson = "^5.8.0"
requests = "^2.31.0"
aiofiles = "^24.0.0"
uvicorn = "^0.30.0"
httpx = "^0.27.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.3.3"
pytest = "*"
pytest-cov = "*"

[tool.poetry.group.local]
optional = true

[tool.poetry.group.local.dependencies]
ruff = "^0.6.0"
ipdb = "0.13.13"
ptipython = "^1.0.1"
pyright = "^1.1.358"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E", "F", "W", "C", "I", "S", "N",
    "UP", "FBT", "T", "DJ", "EXE", "ISC", "INP",
    "PIE", "RSE", "RET", "SIM", "TID", "TCH",
    "INT", "ERA", "FLY", "NPY", "PERF", "RUF"
]
ignore = [
    "C901", "DJ001", "RUF012", "S320",
    "F403", "F405",  # `from foo import *` is fine
    "RUF001",  # non-ASCII is fine
    "SIM108",  # don't suggest ternary operator
    "S311",  # allow using `random` lib
]
ignore-init-module-imports = true

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["S101", "S105"]
"__init__.py" = ["F401"]

[tool.coverage.run]
branch = true
source = ["app"]
dynamic_context = "test_function"
omit = [
]

[tool.coverage.report]
exclude_lines = [
    "@abstractmethod",
    "@abc.abstractmethod",
    "pragma: no cover",
    "TYPE_CHECKING",
]

[tool.coverage.html]
directory = "htmlcov"
skip_covered = true
show_contexts = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
